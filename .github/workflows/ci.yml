name: CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  quality:
    name: "Node ${{ matrix.node-version }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ["18.20.0", "20.17.0", "22.11.0"]

    env:
      TURBO_TEAM: english-app
      TURBO_TOKEN: dummy
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/english_app
      LOG_LEVEL: info
      FEATURE_FLAGS: "{}"
      NEXT_PUBLIC_FEATURE_FLAGS: "{}"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"
          cache-dependency-path: |
            pnpm-lock.yaml

      - name: Restore turbo cache
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ matrix.node-version }}-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ matrix.node-version }}-
            ${{ runner.os }}-turbo-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Generate Prisma client
        run: pnpm prisma:generate

      - name: Clean coverage directory
        run: rm -rf coverage

      - name: Lint
        run: pnpm lint

      - name: Typecheck
        run: pnpm typecheck

      - name: Test
        run: pnpm test

      - name: Lint OpenAPI spec
        run: pnpm openapi:lint

      - name: Build
        run: pnpm build

      - name: Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage
          if-no-files-found: warn
